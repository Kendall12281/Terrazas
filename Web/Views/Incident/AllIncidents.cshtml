
@model  List<Infraestructure.Model.ViewModel.Incident.ViewModelIncident>

@{
    ViewBag.Title = "Index";
}



<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>DataTables </title>
    <meta name="description" content="">
    <meta name="keywords" content="">
    <link href="~/Content/DataTable/styles.css" rel="stylesheet" />
    <link href="~/Content/DataTable/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/Content/DataTable/responsive.dataTables.min.css" rel="stylesheet" />



</head>

<body>


    <!--Container-->
    <div class="mt-5" style="margin-right:2rem; overflow:hidden">




        <!--Card-->
        <div class="p-8 mt-5 lg:mt-0 rounded shadow bg-white">


            <table id="example" class="stripe hover" style="width:100%; padding-top: 1em;  padding-bottom: 1em;">
                <thead>
                    <tr>

                        <th data-priority="1">House Number</th>
                        <th data-priority="2">Resident Name</th>
                        <th data-priority="3">Title</th>
                        <th data-priority="4">Date</th>
                        <th data-priority="5">Status</th>
                        <th data-priority="6">Options</th>

                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="text-center">
                            <td>
                                @Html.DisplayFor(modelItem => item.resident.HouseNumber)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.resident.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Date)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IncidentState.Name)
                            </td>

                            <td class="flex gap-2">

                                <button class="mx-auto">
                                    <svg viewBox="0 0 512 512" height="20">
                                        <path d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C6504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z" />
                                    </svg>
                                    @Html.ActionLink("Detail", "Detail", new { id = item.Id })

                                </button>
                            </td>

                        </tr>


                    }
                </tbody>

            </table>


        </div>
        <!--/Card-->


    </div>
    <!--/container-->
    <!-- jQuery -->
    <script type="text/javascript" src="~/Content/DataTable/js/jquery-3.4.1.min.js"></script>

    <!--Datatables -->
    <script src="~/Content/DataTable/js/jquery.dataTables.min.js"></script>
    <script src="~/Content/DataTable/js/dataTables.responsive.min.js"></script>
    <script>
        $(document).ready(function () {

            var table = $('#example').DataTable({
                responsive: true
            })
                .columns.adjust()
                .responsive.recalc();
        });
    </script>

</body>

</html>


