@*@model Infraestructure.Model.Resident*@
@model Infraestructure.Model.ViewModel.Resident.ViewModelResident

@{
    ViewBag.Title = "View";
    List<SelectListItem> list = (List<SelectListItem>)ViewBag.houseStates;
}
<head>

    <link rel="stylesheet" href="~/Content/Site.css">
</head>

@using (Html.BeginForm("New", "Resident",FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="w-full md:w-8/12 xl:w-4/12">
    @Html.ValidationSummary(true, "")
    <div>
        <label>
            @Html.LabelFor(model => model.UserEmail)
        </label>
        <div class="mb-8">
            @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "bg-white border sm:text-sm rounded-lg block w-full p-2.5" } })
            @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-red-500" })
        </div>
    </div>

    <div >
        @Html.LabelFor(model => model.HouseNumber)
        <div class="mb-8">
            @Html.EditorFor(model => model.HouseNumber, new { htmlAttributes = new { @class = "bg-white border sm:text-sm rounded-lg block w-full p-2.5" } })
            @Html.ValidationMessageFor(model => model.HouseNumber, "", new { @class = "text-red-500" })
        </div>
    </div>

    <div >
        @Html.LabelFor(model => model.Name)
        <div class="mb-8">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "bg-white border sm:text-sm rounded-lg block w-full p-2.5" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-red-500" })
        </div>
    </div>

    <div >
        @Html.LabelFor(model => model.LastName)
        <div class="mb-8">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = " bg-white border sm:text-sm rounded-lg block w-full p-2.5" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-red-500" })
        </div>
    </div>

    <div >
        @Html.LabelFor(model => model.PersonCount)
        <div class="mb-8">
            @Html.EditorFor(model => model.PersonCount, new { htmlAttributes = new { @class = " bg-white border sm:text-sm rounded-lg block w-full p-2.5" } })
            @Html.ValidationMessageFor(model => model.PersonCount, "", new { @class = "text-red-500" })
        </div>
    </div>

    <div >
        @Html.LabelFor(model => model.CarsCount)
        <div class="mb-8">
            @Html.EditorFor(model => model.CarsCount, new { htmlAttributes = new { @class = " bg-white border sm:text-sm rounded-lg block w-full p-2.5" } })
            @Html.ValidationMessageFor(model => model.CarsCount, "", new { @class = "text-red-500" })
        </div>
    </div>

    <div >
        @Html.LabelFor(model => model.StartedDate)
        <div class="mb-8">
            @Html.EditorFor(model => model.StartedDate, new { htmlAttributes = new { @class = " bg-white border sm:text-sm rounded-lg block w-full p-2.5" } })
            @Html.ValidationMessageFor(model => model.StartedDate, "", new { @class = "text-red-500" })
        </div>
    </div>

    <div >
        @Html.LabelFor(model => model.HouseState)
        <div class="mb-8">
            @Html.DropDownListFor(model => model.HouseState, list, null, new { @class = "bg-white border sm:text-sm rounded-lg block w-full p-2.5" })
            @Html.ValidationMessageFor(model => model.HouseState, "", new { @class = "text-red-500" })
        </div>
    </div>

    <div class="flex gap-4">
        <input type="submit" value="Create Resident" class="font-medium rounded-lg text-sm px-5 py-2.5 text-center btn-green-color shadow" />
    </div>
</div>
}

